test_1.py:class UnitTests(unittest.TestCase):
test_1.py:    def test_this_and_than(self):
test_2a.3.py:class IntegrationTests(unittest.TestCase):
test_2a.3.py:    def test_function__given_this__then_that(self):
test_unit_add_cw_log_error_metric.py:class CWLogUnitTest(unittest.TestCase):
test_unit_add_cw_log_error_metric.py:    def test_func_lambda_handler__given_metric_already_exists__then_counts_match(self):
test_unit_add_cw_log_error_metric.py:    def test_func_lambda_handler__given_metric_does_not_exist__then_tries_to_add_it(
test_unit_add_cw_log_error_metric.py:    def test_func_lambda_handler__given_filter_ziegler__then_ziegler_not_added(self):
test_unit_add_cw_log_error_metric.py:    def test_func_is_old_alarm__given_alarm_is_older_than_30_days(self):
test_unit_add_cw_log_error_metric.py:    def test_func_is_old_alarm__given_alarm_is_not_older_than_30_days(self):
test_unit_add_cw_log_error_metric.py:    def test_func_get_old_alarms_names_array__given(self, mock_client):
test_unit_add_cw_log_error_metric_LogMetricFilters.py:class LogMetricFiltersUnitTests(unittest.TestCase):
test_unit_add_cw_log_error_metric_LogMetricFilters.py:    def test_constructor__given_whats_needed__then_no_exceptions(self):
test_unit_add_cw_log_error_metric_LogMetricFilters.py:    def test_get_ec2_instance_name_from_log_group__given_ec2_log_group_name__then_return_matching_instance(
test_unit_add_cw_log_error_metric_LogMetricFilters.py:    def test_get_ec2_info_for_related_log_groups__given_some_are_ec2__then_ec2s_info_returned(
test_unit_add_cw_log_error_metric_LogMetricFilters.py:    def test_filter_log_group_names_for_ec2_tags__given_few_ec2_logs_should_be_removed__then_they_are_removed(
test_unit_add_cw_log_error_metric_filter_list_by_regex_pattern.py:class FilterRegExUnitTests(unittest.TestCase):
test_unit_add_cw_log_error_metric_filter_list_by_regex_pattern.py:    def test_filter_list_by_regex__given_empty_regexes__then_full_list_returned(self):
test_unit_add_cw_log_error_metric_filter_list_by_regex_pattern.py:    def test_filter_list_by_regex__given_only_exclude_regexe__then_partial_list_returned(
test_unit_add_cw_log_error_metric_filter_list_by_regex_pattern.py:    def test_filter_list_by_regex__given_only_include_regexe__then_partial_list_returned(
test_unit_add_cw_log_error_metric_filter_list_by_regex_pattern.py:    def test_filter_list_by_regex__given_both_regexs__then_partial_list_returned(self):
tests.py:class UnitTests(unittest.TestCase):
tests.py:    def test_format_output__given_two_files_in_results__then_results_are_correct(self):
tests.py:        input = """test_1.py:class UnitTests(unittest.TestCase):
tests.py:test_1.py:    def test_this_and_than(self):
tests.py:test_2a.3.py:class IntegrationTests(unittest.TestCase):
tests.py:test_2a.3.py:    def test_function_a__given_this__then_that(self):
tests.py:test_2a.3.py:    def test_function_a__given_this_1__then_that_2(self):"""
tests.py:        expected = """test_1.py                               | class UnitTests(unittest.TestCase)
tests.py:test_1.py                               |     def test_this_and_than(self)
tests.py:test_2a.3.py                            | class IntegrationTests(unittest.TestCase)
tests.py:test_2a.3.py                            |     def test_function__                         given_this__                            then_that(self)
